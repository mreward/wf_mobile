"use strict";

require("earlgrey-runtime/5");var $targ$6 = undefined;var accum$0 = undefined;var $targ$7 = undefined;var accum$1 = undefined;var $targ$8 = undefined;var accum$2 = undefined;var $targ$9 = undefined;var accum$3 = undefined;var $targ$10 = undefined;var accum$4 = undefined;var $targ$11 = undefined;var accum$5 = undefined;var package$1 = undefined;var accum$6 = undefined;var accum$7 = undefined;var accum$8 = undefined;var accum$9 = undefined;var accum$10 = undefined;var $targ$13 = undefined;var $targ$14 = undefined;var $targ$15 = undefined;var util$0 = undefined;var tuck$0 = undefined;var fork__minus__identify$0 = undefined;var ID$0 = undefined;var symbols$0 = undefined;var $0$0 = undefined;var setup__minus__proxy$0 = undefined;var deprox$0 = undefined;var proxy$0 = undefined;var clobber$0 = undefined;var object__minus__clobber__minus__helper$0 = undefined;var kaiser$0 = undefined;var _items$0 = undefined;var Dict$0 = undefined;var $targ$0 = undefined;var $targ$1 = undefined;var DictTrack$0 = undefined;var $targ$2 = undefined;var DictProxy$0 = undefined;var $targ$3 = undefined;util$0 = require("./util");tuck$0 = getProperty(util$0, "tuck", "util");fork__minus__identify$0 = getProperty(util$0, "forkIdentify", "util");ID$0 = getProperty(util$0, "ID", "util");symbols$0 = getProperty(util$0, "symbols", "util");$0$0 = require("./proxy");setup__minus__proxy$0 = getProperty($0$0, "setupProxy", "./proxy");deprox$0 = getProperty($0$0, "deprox", "./proxy");proxy$0 = getProperty($0$0, "proxy", "./proxy");clobber$0 = require("./clobber");object__minus__clobber__minus__helper$0 = getProperty(clobber$0, "objectClobberHelper", "clobber");kaiser$0 = require("kaiser");_items$0 = items;Dict$0 = function Dict() {
  var $targ$4 = undefined;var data$0 = undefined;var t0$0 = undefined;var m$0$0 = undefined;var __at___$0 = undefined;if (!getChecker(Dict$0)(this)) {
    __at___$0 = Object.create(Dict$0.prototype);
  } else {
    __at___$0 = this;
  }m$0$0 = arguments;t0$0 = m$0$0.length;if (t0$0 >= 0 && t0$0 <= 1) {
    if (0 >= t0$0) {
      data$0 = {};
    } else {
      data$0 = m$0$0[0];
    }$targ$4 = object(items(data$0));__at___$0.data = $targ$4;void 0;
  } else {
    ___match_error(m$0$0, "{data = {=}}");
  }return __at___$0;
};Dict$0.prototype.get = function get(key$0) {
  var __at___$1 = undefined;var self$0 = undefined;__at___$1 = this;self$0 = this;return send(send(__at___$1, "data", true), key$0);
};Dict$0.prototype.has = function has(key$1) {
  var __at___$2 = undefined;var self$1 = undefined;__at___$2 = this;self$1 = this;return Object.hasOwnProperty.call(__at___$2.data, key$1);
};Dict$0.prototype.set = function set(temp$0$0, value$0) {
  var bridge$$2200$0 = undefined;var key$2 = undefined;var $targ$5 = undefined;var __at___$3 = undefined;var self$2 = undefined;__at___$3 = this;self$2 = this;bridge$$2200$0 = temp$0$0;if (typeof bridge$$2200$0 === "string" && (key$2 = bridge$$2200$0, true) || typeof bridge$$2200$0 === "number" && (key$2 = bridge$$2200$0, true)) {} else {
    ___match_error(temp$0$0);
  }$targ$5 = value$0;__at___$3.data[key$2] = $targ$5;return void 0;
};$targ$0 = function (key$3) {
  var __at___$4 = undefined;var self$3 = undefined;__at___$4 = this;self$3 = this;delete __at___$4.data[key$3];
};Dict$0.prototype["delete"] = $targ$0;Dict$0.prototype.items = function items() {
  var __at___$5 = undefined;var self$4 = undefined;__at___$5 = this;self$4 = this;return _items$0(__at___$5.data);
};$targ$1 = function (other$0) {
  var __at___$6 = undefined;var self$5 = undefined;__at___$6 = this;self$5 = this;return getChecker(Dict$0)(other$0) && equal(__at___$6.data, other$0.data);
};Dict$0.prototype[Symbol.equals] = $targ$1;__amp____colon__(Dict$0, __amp____colon__(($targ$6 = "Dict", accum$0 = {}, accum$0["::name"] = $targ$6, accum$0), ($targ$7 = true, accum$1 = {}, accum$1["::egclass"] = $targ$7, accum$1)));DictTrack$0 = function DictTrack(init$0) {
  var __at___$7 = undefined;if (!getChecker(DictTrack$0)(this)) {
    __at___$7 = Object.create(DictTrack$0.prototype);
  } else {
    __at___$7 = this;
  }init$0 && __amp____colon__(__at___$7, init$0);return __at___$7;
};$targ$2 = regeneratorRuntime.mark(function callee$0$0(writes$0) {
  var _this = this;

  var m$1, acc$0, temp$1, __at___$8, self$6, _iterator, _step, tmp$0, r$1, name$0, r$0, t0$1, t1$0;

  return regeneratorRuntime.wrap(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        m$1 = undefined;
        acc$0 = undefined;
        temp$1 = undefined;
        __at___$8 = undefined;
        self$6 = undefined;
        __at___$8 = _this;self$6 = _this;acc$0 = [];temp$1 = null;m$1 = null;_iterator = items(writes$0 || {})[Symbol.iterator]();

      case 11:
        if ((_step = _iterator.next()).done) {
          context$1$0.next = 38;
          break;
        }

        m$1 = _step.value;
        tmp$0 = undefined;
        r$1 = undefined;
        name$0 = undefined;
        r$0 = undefined;
        t0$1 = undefined;
        t1$0 = undefined;
        t0$1 = m$1;
        if (!(Array.isArray(t0$1) && (t1$0 = t0$1.length, t1$0 === 2 && (name$0 = t0$1[0], t0$1[1], r$0 = send(__at___$8, name$0), r$0.notEmpty())))) {
          context$1$0.next = 27;
          break;
        }

        context$1$0.next = 23;
        return r$0;

      case 23:
        temp$1 = context$1$0.sent;
        acc$0.push(temp$1);context$1$0.next = 36;
        break;

      case 27:
        r$1 = __at___$8["@iter"];
        if (!(tmp$0 = r$1, tmp$0 === undefined || tmp$0 === null ? tmp$0 : tmp$0.notEmpty())) {
          context$1$0.next = 35;
          break;
        }

        context$1$0.next = 31;
        return r$1;

      case 31:
        temp$1 = context$1$0.sent;
        acc$0.push(temp$1);context$1$0.next = 36;
        break;

      case 35:
        false;

      case 36:
        context$1$0.next = 11;
        break;

      case 38:
        return context$1$0.abrupt("return", acc$0);

      case 39:
      case "end":
        return context$1$0.stop();
    }
  }, callee$0$0, this);
});DictTrack$0.prototype[symbols$0.relevantChanges] = $targ$2;__amp____colon__(DictTrack$0, __amp____colon__(($targ$8 = "DictTrack", accum$2 = {}, accum$2["::name"] = $targ$8, accum$2), ($targ$9 = true, accum$3 = {}, accum$3["::egclass"] = $targ$9, accum$3)));DictProxy$0 = function DictProxy(obj$0, tracks$0, patch$0) {
  var __at___$9 = undefined;if (!getChecker(DictProxy$0)(this)) {
    __at___$9 = Object.create(DictProxy$0.prototype);
  } else {
    __at___$9 = this;
  }setup__minus__proxy$0(__at___$9, obj$0, tracks$0, patch$0, DictTrack$0);return __at___$9;
};DictProxy$0.prototype.get = function get(key$4) {
  var __at___$10 = undefined;var self$7 = undefined;__at___$10 = this;self$7 = this;send(__at___$10, symbols$0.registerTracks, true)(key$4, true);return proxy$0(send(__at___$10, symbols$0.obj).get(key$4), send(__at___$10, symbols$0.tracks), send(__at___$10, symbols$0.patch));
};DictProxy$0.prototype.has = function has(key$5) {
  var __at___$11 = undefined;var self$8 = undefined;__at___$11 = this;self$8 = this;send(__at___$11, symbols$0.registerTracks, true)(key$5, true);return send(__at___$11, symbols$0.obj).has(key$5);
};DictProxy$0.prototype.set = function set(key$6, value$1) {
  var o$0 = undefined;var __at___$12 = undefined;var self$9 = undefined;__at___$12 = this;self$9 = this;o$0 = send(__at___$12, symbols$0.obj);return send(__at___$12, symbols$0.registerPatch, true)(key$6, ["update", deprox$0(value$1)]);
};$targ$3 = function (key$7) {
  var __at___$13 = undefined;var self$10 = undefined;__at___$13 = this;self$10 = this;return send(__at___$13, symbols$0.registerPatch, true)(key$7, ["delete"]);
};DictProxy$0.prototype["delete"] = $targ$3;DictProxy$0.prototype.items = function items() {
  var m$2 = undefined;var acc$1 = undefined;var temp$2 = undefined;var __at___$14 = undefined;var self$11 = undefined;__at___$14 = this;self$11 = this;send(__at___$14, symbols$0.registerTracks, true)("@iter", true);acc$1 = [];temp$2 = null;m$2 = null;$2: for (var _iterator = send(__at___$14, symbols$0.obj).items()[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
    m$2 = _step.value;
    var k$0 = undefined;var v$0 = undefined;var t0$2 = undefined;var t1$1 = undefined;t0$2 = m$2;if (Array.isArray(t0$2) && (t1$1 = t0$2.length, t1$1 === 2)) {
      k$0 = t0$2[0];v$0 = t0$2[1];temp$2 = [k$0, proxy$0(v$0, send(__at___$14, symbols$0.tracks), send(__at___$14, symbols$0.patch))];acc$1.push(temp$2);
    } else {
      ___match_error(m$2);
    }
  }return acc$1;
};__amp____colon__(DictProxy$0, __amp____colon__(($targ$10 = "DictProxy", accum$4 = {}, accum$4["::name"] = $targ$10, accum$4), ($targ$11 = true, accum$5 = {}, accum$5["::egclass"] = $targ$11, accum$5)));kaiser$0.register(Dict$0, __amp____colon__({ "package": (package$1 = require("../package"), package$1), nameVariant: "Dict" }, __amp____colon__((accum$6 = {}, accum$6.serialize = function serialize(__at___$15) {
  return __at___$15.data;
}, accum$6), __amp____colon__((accum$7 = {}, accum$7.deserialize = function deserialize(obj$1) {
  return Dict$0(obj$1);
}, accum$7), __amp____colon__((accum$8 = {}, accum$8.create = function create() {
  return Dict$0();
}, accum$8), __amp____colon__((accum$9 = {}, accum$9.fill = function fill(__at___$16, values$0) {
  var $targ$12 = undefined;$targ$12 = values$0;__at___$16.data = $targ$12;return void 0;
}, accum$9), (accum$10 = {}, accum$10.proxy = function proxy(__at___$17, tracks$1, patch$1) {
  return DictProxy$0(__at___$17, tracks$1, patch$1);
}, accum$10)))))));$targ$13 = Dict$0;exports.Dict = $targ$13;$targ$14 = DictProxy$0;exports.DictProxy = $targ$14;$targ$15 = DictTrack$0;exports.DictTrack = $targ$15;void 0;
//# sourceMappingURL=dict.js.map

