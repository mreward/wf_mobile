"use strict";

require("earlgrey-runtime/5");var $targ$1 = undefined;var kaiser$0 = undefined;var maybe__minus__handler$0 = undefined;var kser$0 = undefined;var remap__minus__properties$0 = undefined;kaiser$0 = require("kaiser");maybe__minus__handler$0 = getProperty(kaiser$0, "maybeHandler", "kaiser");kser$0 = getProperty(kaiser$0, "defaultSerializer", "kaiser");remap__minus__properties$0 = function remapProperties(value$0, fn$0) {
  var m$0 = undefined;var h$0 = undefined;var changes$0 = undefined;var s$0 = undefined;h$0 = maybe__minus__handler$0(value$0);if (!h$0) {
    return null;
  }changes$0 = false;s$0 = kser$0.toObject(value$0, false).data;m$0 = null;$0: for (var _iterator = items(s$0)[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
    m$0 = _step.value;
    var $targ$0 = undefined;var newv$0 = undefined;var k$0 = undefined;var v$0 = undefined;var t0$0 = undefined;var t1$0 = undefined;t0$0 = m$0;if (Array.isArray(t0$0) && (t1$0 = t0$0.length, t1$0 === 2)) {
      k$0 = t0$0[0];v$0 = t0$0[1];newv$0 = fn$0(k$0, v$0);if (newv$0 !== v$0) {
        changes$0 = true;$targ$0 = newv$0;s$0[k$0] = $targ$0;void 0;
      }
    } else {
      ___match_error(m$0);
    }
  }if (changes$0) {
    return h$0.fill(value$0, s$0);
  }
};$targ$1 = remap__minus__properties$0;exports.remapProperties = $targ$1;void 0;
//# sourceMappingURL=iter.js.map

