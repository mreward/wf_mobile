"use strict";

require("earlgrey-runtime/5");var $targ$0 = undefined;var $targ$1 = undefined;var $targ$2 = undefined;var util$0 = undefined;var symbols$0 = undefined;var intersect$0 = undefined;var iterate__minus__intersect$0 = undefined;var relevant__minus__changes$0 = undefined;util$0 = require("./util");symbols$0 = getProperty(util$0, "symbols", "util");intersect$0 = function intersect(tracks$0, patch$0, dir$0) {
  var m$0 = undefined;m$0 = null;$0: for (var _iterator = iterate__minus__intersect$0(tracks$0, patch$0, dir$0)[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
    m$0 = _step.value;
    var x$0 = undefined;x$0 = m$0;return true;
  }return false;
};iterate__minus__intersect$0 = regeneratorRuntime.mark(function iterateIntersect(tracks$1, patch$1, dir$1) {
  var m$1, acc$0, temp$0, _iterator, _step, obj$0, reads$0, id$0, writes$0, t0$0, t1$0;

  return regeneratorRuntime.wrap(function iterateIntersect$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        m$1 = undefined;
        acc$0 = undefined;
        temp$0 = undefined;
        acc$0 = [];temp$0 = null;m$1 = null;_iterator = patch$1.list()[Symbol.iterator]();

      case 7:
        if ((_step = _iterator.next()).done) {
          context$1$0.next = 30;
          break;
        }

        m$1 = _step.value;
        obj$0 = undefined;
        reads$0 = undefined;
        id$0 = undefined;
        writes$0 = undefined;
        t0$0 = undefined;
        t1$0 = undefined;
        t0$0 = m$1;
        if (!(Array.isArray(t0$0) && (t1$0 = t0$0.length, t1$0 === 2))) {
          context$1$0.next = 27;
          break;
        }

        id$0 = t0$0[0];writes$0 = t0$0[1];obj$0 = dir$1.get(id$0);reads$0 = tracks$1.get(id$0);
        if (!reads$0) {
          context$1$0.next = 24;
          break;
        }

        return context$1$0.delegateYield(relevant__minus__changes$0(obj$0, reads$0, writes$0), "t2", 23);

      case 23:
        temp$0 = context$1$0.t2;

      case 24:
        acc$0.push(temp$0);context$1$0.next = 28;
        break;

      case 27:
        ___match_error(m$1);

      case 28:
        context$1$0.next = 7;
        break;

      case 30:
        return context$1$0.abrupt("return", acc$0);

      case 31:
      case "end":
        return context$1$0.stop();
    }
  }, iterateIntersect, this);
});relevant__minus__changes$0 = function relevantChanges(value$0, reads$1, writes$1) {
  return send(reads$1, symbols$0.relevantChanges, true)(writes$1);
};$targ$0 = intersect$0;exports.intersect = $targ$0;$targ$1 = iterate__minus__intersect$0;exports.iterateIntersect = $targ$1;$targ$2 = relevant__minus__changes$0;exports.relevantChanges = $targ$2;void 0;
//# sourceMappingURL=relevant.js.map

