"use strict";

require("earlgrey-runtime/5");var $targ$7 = undefined;var accum$0 = undefined;var $targ$8 = undefined;var accum$1 = undefined;var $targ$9 = undefined;var util$0 = undefined;var ID$0 = undefined;var methods$0 = undefined;var tuck$0 = undefined;var fork__minus__identify$0 = undefined;var Root$0 = undefined;var $targ$0 = undefined;var $targ$1 = undefined;var $targ$2 = undefined;var $targ$3 = undefined;var $targ$4 = undefined;util$0 = require("./util");ID$0 = getProperty(util$0, "ID", "util");methods$0 = getProperty(util$0, "methods", "util");tuck$0 = getProperty(util$0, "tuck", "util");fork__minus__identify$0 = getProperty(util$0, "forkIdentify", "util");Root$0 = function Root() {
  var t0$0 = undefined;var m$0$0 = undefined;var __at___$0 = undefined;if (!getChecker(Root$0)(this)) {
    __at___$0 = Object.create(Root$0.prototype);
  } else {
    __at___$0 = this;
  }m$0$0 = arguments;t0$0 = m$0$0.length;if (t0$0 >= 1 && t0$0 <= 3) {
    __at___$0.root = m$0$0[0];__at___$0.action = 1 >= t0$0 ? function (x$0) {
      return x$0;
    } : m$0$0[1];__at___$0.idle = 2 >= t0$0 ? false : m$0$0[2];if (!__at___$0.idle) {
      __at___$0.action(__at___$0.root);
    }
  } else {
    ___match_error(m$0$0, "{@root, @action = {x} -> x, @idle = false}");
  }return __at___$0;
};$targ$0 = function (tracks$0, patch$0, prevent__minus__dirty__minus__reads$0) {
  var __at___$1 = undefined;var self$0 = undefined;__at___$1 = this;self$0 = this;throw ErrorFactory(["proxy", "notImplemented"]).create("Root instances cannot be proxied.");
};Root$0.prototype[methods$0.proxy] = $targ$0;$targ$1 = function () {
  var gen__minus__patch$0 = undefined;var id$0 = undefined;var __at___$2 = undefined;var self$1 = undefined;__at___$2 = this;self$1 = this;id$0 = send(self$1, ID$0);gen__minus__patch$0 = function genPatch(patch$1, new__minus__v$0) {
    var $targ$5 = undefined;$targ$5 = ["update", new__minus__v$0];patch$1.get(id$0).root = $targ$5;return void 0;
  };return [["root", __at___$2.root, gen__minus__patch$0]];
};Root$0.prototype[methods$0.iterateProperties] = $targ$1;$targ$2 = function (dir$0) {
  var __at___$3 = undefined;var self$2 = undefined;__at___$3 = this;self$2 = this;return Root$0(__at___$3.root, __at___$3.action);
};Root$0.prototype[methods$0.fork] = $targ$2;$targ$3 = function (patch$2, dir$1) {
  var $targ$6 = undefined;var new__minus__root$0 = undefined;var t0$1 = undefined;var t1$0 = undefined;var m$1$0 = undefined;var __at___$4 = undefined;var self$3 = undefined;__at___$4 = this;self$3 = this;m$1$0 = patch$2.getFor(self$3);if (___hasprop(m$1$0, "root") && (t0$1 = m$1$0.root, Array.isArray(t0$1) && (t1$0 = t0$1.length, t1$0 === 2 && t0$1[0] === "update"))) {
    new__minus__root$0 = t0$1[1];$targ$6 = dir$1.replace(__at___$4.root, new__minus__root$0);__at___$4.root = $targ$6;return __at___$4.action(__at___$4.root);
  } else {
    return undefined;
  }
};Root$0.prototype[methods$0.patch] = $targ$3;$targ$4 = function (new__minus__root$1, dir$2) {
  var __at___$5 = undefined;var self$4 = undefined;__at___$5 = this;self$4 = this;throw ErrorFactory(["clobber", "notImplemented"]).create("Cannot clobber a Root.");
};Root$0.prototype[methods$0.clobber] = $targ$4;__amp____colon__(Root$0, __amp____colon__(($targ$7 = "Root", accum$0 = {}, accum$0["::name"] = $targ$7, accum$0), ($targ$8 = true, accum$1 = {}, accum$1["::egclass"] = $targ$8, accum$1)));$targ$9 = Root$0;exports.Root = $targ$9;void 0;
//# sourceMappingURL=root.js.map

