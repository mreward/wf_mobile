"use strict";

require("earlgrey-runtime/5");var $targ$5 = undefined;var accum$0 = undefined;var $targ$6 = undefined;var accum$1 = undefined;var $targ$8 = undefined;var $targ$9 = undefined;var cache$0 = undefined;var cached__minus__function$0 = undefined;var util$0 = undefined;var symbols$0 = undefined;var opaque__minus__wrapper$0 = undefined;var contents$0 = undefined;var extract__minus__opaque$0 = undefined;var Opaque$0 = undefined;var $targ$0 = undefined;var $targ$1 = undefined;var opaque__minus__cached__minus__function$0 = undefined;cache$0 = require("./cache");cached__minus__function$0 = getProperty(cache$0, "cachedFunction", "cache");util$0 = require("./util");symbols$0 = getProperty(util$0, "symbols", "util");opaque__minus__wrapper$0 = Symbol("opaque-wrapper");contents$0 = Symbol("contents");extract__minus__opaque$0 = function extractOpaque(temp$0$0) {
  var t0$0 = undefined;var x$0 = undefined;var ph$0$0 = undefined;t0$0 = temp$0$0;x$0 = t0$0;ph$0$0 = t0$0;if (getChecker(Opaque$0)(ph$0$0)) {
    return send(x$0, contents$0);
  } else {
    return x$0;
  }
};Opaque$0 = function Opaque(temp$1$0) {
  var t0$1 = undefined;var bridge$$4325$0 = undefined;var bridge$$4324$0 = undefined;var bridge$$4323$0 = undefined;var bridge$$4322$0 = undefined;var $targ$2 = undefined;var $targ$3 = undefined;var bridge$$4321$0 = undefined;var t0$2 = undefined;var t1$0 = undefined;var value$0 = undefined;var ph$1$0 = undefined;var __at___$0 = undefined;if (!getChecker(Opaque$0)(this)) {
    __at___$0 = Object.create(Opaque$0.prototype);
  } else {
    __at___$0 = this;
  }t0$1 = temp$1$0;value$0 = t0$1;ph$1$0 = t0$1;bridge$$4321$0 = ph$1$0;if ((bridge$$4322$0 = bridge$$4321$0, (bridge$$4323$0 = bridge$$4322$0, (bridge$$4324$0 = bridge$$4323$0, (bridge$$4325$0 = bridge$$4324$0, typeof bridge$$4325$0 === "string" || typeof bridge$$4325$0 === "number") || typeof bridge$$4324$0 === "boolean") || getChecker(Symbol)(bridge$$4323$0)) || bridge$$4322$0 === null) || bridge$$4321$0 === void 0) {
    throw ErrorFactory(["opaque"]).create("Opaque function cannot return a primitive value like '" + value$0 + "'");
  } else {
    t0$2 = ph$1$0;t1$0 = opaque__minus__wrapper$0;if (___hasprop(t0$2, t1$0) && (send(t0$2, t1$0) ? true : false)) {
      throw ErrorFactory(["opaque"]).create("Opaque function must own the values it returns. You cannot return the result of another opaque call.");
    } else {
      $targ$2 = __at___$0;value$0[opaque__minus__wrapper$0] = $targ$2;$targ$3 = value$0;__at___$0[contents$0] = $targ$3;void 0;
    }
  }return __at___$0;
};$targ$0 = function () {
  var __at___$1 = undefined;var self$0 = undefined;__at___$1 = this;self$0 = this;return [[contents$0, send(__at___$1, contents$0), function (new__minus__c$0) {
    var $targ$4 = undefined;$targ$4 = new__minus__c$0;__at___$1[contents$0] = $targ$4;return void 0;
  }]];
};Opaque$0.prototype[symbols$0.iterateProperties] = $targ$0;$targ$1 = function (dir$0) {
  var __at___$2 = undefined;var self$1 = undefined;__at___$2 = this;self$1 = this;return Opaque$0(send(__at___$2, contents$0));
};Opaque$0.prototype[symbols$0.fork] = $targ$1;__amp____colon__(Opaque$0, __amp____colon__(($targ$5 = "Opaque", accum$0 = {}, accum$0["::name"] = $targ$5, accum$0), ($targ$6 = true, accum$1 = {}, accum$1["::egclass"] = $targ$6, accum$1)));opaque__minus__cached__minus__function$0 = function opaqueCachedFunction(render$0) {
  var render2$0 = undefined;render2$0 = function render2() {
    var t0$3 = undefined;var args$0 = undefined;var t0$4 = undefined;var m$0$0 = undefined;var $targ$7 = undefined;var __at___$3 = undefined;var self$2 = undefined;$targ$7 = this;t0$3 = $targ$7;__at___$3 = t0$3;self$2 = t0$3;[__at___$3, self$2];m$0$0 = arguments;t0$4 = m$0$0.length;if (t0$4 >= 0) {
      args$0 = Array.prototype.slice.call(m$0$0, 0);return Opaque$0(render$0.apply(__at___$3, args$0));
    } else {
      return ___match_error(m$0$0, "{*args}");
    }
  };return cached__minus__function$0(render2$0);
};$targ$8 = Opaque$0;exports.Opaque = $targ$8;$targ$9 = opaque__minus__cached__minus__function$0;exports.opaqueCachedFunction = $targ$9;void 0;
//# sourceMappingURL=opaque.js.map

