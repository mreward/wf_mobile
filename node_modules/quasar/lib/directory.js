"use strict";

require("earlgrey-runtime/5");var $targ$7 = undefined;var accum$0 = undefined;var $targ$8 = undefined;var accum$1 = undefined;var $targ$11 = undefined;var util$0 = undefined;var identify$0 = undefined;var fork__minus__identify$0 = undefined;var tuck$0 = undefined;var next__minus__id$0 = undefined;var ID$0 = undefined;var FORKID$0 = undefined;var DIRECTORY$0 = undefined;var symbols$0 = undefined;var longest__minus__run$0 = undefined;var proxy$0 = undefined;var deprox$0 = undefined;var iter$0 = undefined;var remap__minus__properties$0 = undefined;var kaiser$0 = undefined;var get__minus__handler$0 = undefined;var maybe__minus__handler$0 = undefined;var kser$0 = undefined;var $0$0 = undefined;var clobber$0 = undefined;var SIZE$0 = undefined;var Directory$0 = undefined;var patch__minus__shallow$0 = undefined;util$0 = require("./util");identify$0 = getProperty(util$0, "identify", "util");fork__minus__identify$0 = getProperty(util$0, "forkIdentify", "util");tuck$0 = getProperty(util$0, "tuck", "util");next__minus__id$0 = getProperty(util$0, "nextId", "util");ID$0 = getProperty(util$0, "ID", "util");FORKID$0 = getProperty(util$0, "FORKID", "util");DIRECTORY$0 = getProperty(util$0, "DIRECTORY", "util");symbols$0 = getProperty(util$0, "symbols", "util");longest__minus__run$0 = getProperty(util$0, "longestRun", "util");proxy$0 = require("./proxy");deprox$0 = getProperty(proxy$0, "deprox", "proxy");iter$0 = require("./iter");remap__minus__properties$0 = getProperty(iter$0, "remapProperties", "iter");kaiser$0 = require("kaiser");get__minus__handler$0 = getProperty(kaiser$0, "getHandler", "kaiser");maybe__minus__handler$0 = getProperty(kaiser$0, "maybeHandler", "kaiser");kser$0 = getProperty(kaiser$0, "defaultSerializer", "kaiser");$0$0 = require("./clobber");clobber$0 = getProperty($0$0, "clobber", "./clobber");SIZE$0 = Symbol("size");Directory$0 = function Directory() {
  var t0$1 = undefined;var $targ$0 = undefined;var $targ$1 = undefined;var $targ$2 = undefined;var t0$0 = undefined;var m$0$0 = undefined;var __at___$0 = undefined;if (!getChecker(Directory$0)(this)) {
    __at___$0 = Object.create(Directory$0.prototype);
  } else {
    __at___$0 = this;
  }m$0$0 = arguments;t0$0 = m$0$0.length;if (t0$0 >= 0 && t0$0 <= 1) {
    __at___$0.options = 0 >= t0$0 ? {} : m$0$0[0];$targ$0 = __at___$0.options;t0$1 = $targ$0;__at___$0.clobberPatch = ___hasprop(t0$1, "clobberPatch") ? t0$1.clobberPatch : false;__at___$0.duplicate = ___hasprop(t0$1, "duplicate") ? t0$1.duplicate : __at___$0.clobberPatch;__at___$0.assimilate = ___hasprop(t0$1, "assimilate") ? t0$1.assimilate : false;$targ$1 = {};__at___$0.dir = $targ$1;$targ$2 = 1;__at___$0.version = $targ$2;void 0;
  } else {
    ___match_error(m$0$0, "{@options = {=}}");
  }return __at___$0;
};Directory$0.prototype.getAll = function (id$0) {
  var m$2 = undefined;var acc$0 = undefined;var temp$0 = undefined;var objs$0 = undefined;var v$0 = undefined;var t0$2 = undefined;var m$1$0 = undefined;var __at___$1 = undefined;var self$0 = undefined;__at___$1 = this;self$0 = this;m$1$0 = send(send(__at___$1, "dir", true), id$0);if (m$1$0 === void 0) {
    return [];
  } else {
    if (Array.isArray(m$1$0) && (t0$2 = m$1$0.length, t0$2 === 2)) {
      m$1$0[0];v$0 = m$1$0[1];return [v$0];
    } else {
      objs$0 = m$1$0;acc$0 = [];temp$0 = null;m$2 = null;$1: for (var _iterator = items(objs$0)[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
        m$2 = _step.value;
        var k$0 = undefined;var v$1 = undefined;var t0$3 = undefined;var t1$0 = undefined;t0$3 = m$2;if (Array.isArray(t0$3) && (t1$0 = t0$3.length, t1$0 === 2)) {
          k$0 = t0$3[0];v$1 = t0$3[1];temp$0 = v$1;acc$0.push(temp$0);
        } else {
          ___match_error(m$2);
        }
      }return acc$0;
    }
  }
};Directory$0.prototype.get = function get(id$1) {
  var __at___$2 = undefined;var self$1 = undefined;__at___$2 = this;self$1 = this;return __at___$2.getAll(id$1)[0];
};Directory$0.prototype.getCanon = function (v$2) {
  var __at___$3 = undefined;var self$2 = undefined;__at___$3 = this;self$2 = this;return v$2 && send(v$2, ID$0) && __at___$3.get(send(v$2, ID$0)) || v$2;
};Directory$0.prototype.list = function list(temp$1$0) {
  var t0$4 = undefined;var tmp$1 = undefined;var tmp$0 = undefined;var sub$0 = undefined;var $targ$3 = undefined;var tmp$3 = undefined;var tmp$2 = undefined;var count$0 = undefined;var value$1 = undefined;var t0$5 = undefined;var m$3$0 = undefined;var $targ$4 = undefined;var id$2 = undefined;var value$0 = undefined;var __at___$4 = undefined;var self$3 = undefined;__at___$4 = this;self$3 = this;t0$4 = getProjector(deprox$0)(temp$1$0);if (t0$4[0]) {
    value$0 = t0$4[1];
  } else {
    ___match_error(temp$1$0);
  }id$2 = send(value$0, ID$0);if (__at___$4.duplicate) {
    sub$0 = __at___$4.dir[id$2] = send(send(__at___$4, "dir", true), id$2) || (function () {
      var $$3699 = {};$$3699[SIZE$0] = 0;return $$3699;
    })();$targ$3 = value$0;sub$0[send(value$0, FORKID$0)] = $targ$3;sub$0[SIZE$0] = send(sub$0, SIZE$0) + 1;if (send(sub$0, SIZE$0) === 1) {
      tmp$1 = maybe__minus__handler$0(value$0);if (tmp$1 === undefined || tmp$1 === null) {
        tmp$0 = tmp$1;
      } else {
        tmp$0 = tmp$1.enter;
      }if (tmp$0 === undefined || tmp$0 === null) {
        return tmp$0;
      } else {
        return tmp$0(value$0, __at___$4);
      }
    }
  } else {
    m$3$0 = send(send(__at___$4, "dir", true), id$2);if (m$3$0 === void 0) {
      tmp$3 = maybe__minus__handler$0(value$0);if (tmp$3 === undefined || tmp$3 === null) {
        tmp$2 = tmp$3;
      } else {
        tmp$2 = tmp$3.enter;
      }if (tmp$2 === undefined || tmp$2 === null) {
        tmp$2;
      } else {
        tmp$2(value$0, __at___$4);
      }$targ$4 = [1, value$0];
    } else {
      if (Array.isArray(m$3$0) && (t0$5 = m$3$0.length, t0$5 === 2)) {
        count$0 = m$3$0[0];value$1 = m$3$0[1];$targ$4 = [count$0 + 1, value$1];
      } else {
        $targ$4 = ___match_error(m$3$0, "{count, value}");
      }
    }__at___$4.dir[id$2] = $targ$4;return void 0;
  }
};Directory$0.prototype.unlist = function unlist(temp$2$0) {
  var t0$6 = undefined;var tmp$5 = undefined;var tmp$4 = undefined;var sub$1 = undefined;var t0$7 = undefined;var t1$1 = undefined;var $targ$6 = undefined;var tmp$7 = undefined;var tmp$6 = undefined;var m$4$0 = undefined;var $targ$5 = undefined;var count$1 = undefined;var id$3 = undefined;var value$2 = undefined;var __at___$5 = undefined;var self$4 = undefined;__at___$5 = this;self$4 = this;t0$6 = getProjector(deprox$0)(temp$2$0);if (t0$6[0]) {
    value$2 = t0$6[1];
  } else {
    ___match_error(temp$2$0);
  }id$3 = send(value$2, ID$0);if (__at___$5.duplicate) {
    sub$1 = send(send(__at___$5, "dir", true), id$3);delete sub$1[send(value$2, FORKID$0)];sub$1[SIZE$0] = send(sub$1, SIZE$0) - 1;if (send(sub$1, SIZE$0) === 0) {
      tmp$5 = maybe__minus__handler$0(value$2);if (tmp$5 === undefined || tmp$5 === null) {
        tmp$4 = tmp$5;
      } else {
        tmp$4 = tmp$5.exit;
      }if (tmp$4 === undefined || tmp$4 === null) {
        return tmp$4;
      } else {
        return tmp$4(value$2, __at___$5);
      }
    }
  } else {
    $targ$5 = send(send(__at___$5, "dir", true), id$3);t0$7 = $targ$5;if (Array.isArray(t0$7) && (t1$1 = t0$7.length, t1$1 === 2)) {
      count$1 = t0$7[0];t0$7[1];
    } else {
      ___match_error($targ$5, "{count, _}");
    }m$4$0 = count$1;if (m$4$0 > 1) {
      $targ$6 = [count$1 - 1, value$2];__at___$5.dir[id$3] = $targ$6;return value$2;
    } else {
      delete __at___$5.dir[id$3];delete value$2[DIRECTORY$0];tmp$7 = maybe__minus__handler$0(value$2);if (tmp$7 === undefined || tmp$7 === null) {
        tmp$6 = tmp$7;
      } else {
        tmp$6 = tmp$7.exit;
      }if (tmp$6 === undefined || tmp$6 === null) {
        return tmp$6;
      } else {
        return tmp$6(value$2, __at___$5);
      }
    }
  }
};Directory$0.prototype.enter = function enter(temp$3$0) {
  var t0$8 = undefined;var t1$2 = undefined;var bridge$$2982$0 = undefined;var bridge$$2981$0 = undefined;var bridge$$2980$0 = undefined;var bridge$$2979$0 = undefined;var ph$1$0 = undefined;var $$3060$0 = undefined;var t0$9 = undefined;var m$5$0 = undefined;var x$0 = undefined;var enter__minus__children$0 = undefined;var value$3 = undefined;var bridge$$2978$0 = undefined;var v$3 = undefined;var ph$0$0 = undefined;var __at___$6 = undefined;var self$5 = undefined;__at___$6 = this;self$5 = this;t0$8 = getProjector(deprox$0)(temp$3$0);if (t0$8[0]) {
    t1$2 = t0$8[1];v$3 = t1$2;ph$0$0 = t1$2;
  } else {
    ___match_error(temp$3$0);
  }bridge$$2978$0 = ph$0$0;if ((bridge$$2979$0 = bridge$$2978$0, (bridge$$2980$0 = bridge$$2979$0, (bridge$$2981$0 = bridge$$2980$0, (bridge$$2982$0 = bridge$$2981$0, bridge$$2982$0 === null || bridge$$2982$0 === void 0) || typeof bridge$$2981$0 === "number") || typeof bridge$$2980$0 === "string") || getChecker(Symbol)(bridge$$2979$0)) || typeof bridge$$2978$0 === "boolean") {
    return v$3;
  } else {
    x$0 = __at___$6.getCanon(v$3);enter__minus__children$0 = true;m$5$0 = x$0;if (__at___$6.duplicate) {
      value$3 = __at___$6.fork(x$0);
    } else {
      t0$9 = DIRECTORY$0;if (___hasprop(m$5$0, t0$9)) {
        ph$1$0 = send(m$5$0, t0$9);if (ph$1$0 === __at___$6) {
          enter__minus__children$0 = false;value$3 = x$0;
        } else {
          value$3 = __at___$6.fork(x$0);
        }
      } else {
        if (__at___$6.assimilate) {
          identify$0(x$0);value$3 = x$0;
        } else {
          value$3 = __at___$6.fork(x$0);
        }
      }
    }tuck$0(value$3, DIRECTORY$0, __at___$6);fork__minus__identify$0(value$3);__at___$6.list(value$3);if (enter__minus__children$0) {
      remap__minus__properties$0(value$3, function (k$1, v2$0) {
        return __at___$6.enter(v2$0);
      });
    }return value$3;
  }
};Directory$0.prototype.exit = function exit(temp$4$0) {
  var t0$10 = undefined;var t1$3 = undefined;var bridge$$3109$0 = undefined;var bridge$$3108$0 = undefined;var bridge$$3107$0 = undefined;var bridge$$3106$0 = undefined;var bridge$$3105$0 = undefined;var v$4 = undefined;var ph$2$0 = undefined;var __at___$7 = undefined;var self$6 = undefined;__at___$7 = this;self$6 = this;t0$10 = getProjector(deprox$0)(temp$4$0);if (t0$10[0]) {
    t1$3 = t0$10[1];v$4 = t1$3;ph$2$0 = t1$3;
  } else {
    ___match_error(temp$4$0);
  }bridge$$3105$0 = ph$2$0;if ((bridge$$3106$0 = bridge$$3105$0, (bridge$$3107$0 = bridge$$3106$0, (bridge$$3108$0 = bridge$$3107$0, (bridge$$3109$0 = bridge$$3108$0, bridge$$3109$0 === null || bridge$$3109$0 === void 0) || typeof bridge$$3108$0 === "number") || typeof bridge$$3107$0 === "string") || getChecker(Symbol)(bridge$$3106$0)) || typeof bridge$$3105$0 === "boolean") {
    return v$4;
  } else {
    __at___$7.unlist(v$4);return remap__minus__properties$0(v$4, function (k$2, v2$1) {
      __at___$7.exit(v2$1);return v2$1;
    });
  }
};Directory$0.prototype.acquire = function acquire(v$5) {
  var __at___$8 = undefined;var self$7 = undefined;__at___$8 = this;self$7 = this;return __at___$8.enter(v$5);
};Directory$0.prototype.fork = function fork(temp$5$0) {
  var t0$11 = undefined;var rval$0 = undefined;var m$6 = undefined;var bridge$$3192$0 = undefined;var value$4 = undefined;var ph$3$0 = undefined;var __at___$9 = undefined;var self$8 = undefined;__at___$9 = this;self$8 = this;t0$11 = temp$5$0;value$4 = t0$11;ph$3$0 = t0$11;bridge$$3192$0 = ph$3$0;if (bridge$$3192$0 === null || bridge$$3192$0 === void 0) {
    return value$4;
  } else {
    identify$0(value$4);try {
      rval$0 = kaiser$0.shallowCopy(deprox$0(value$4));rval$0;
    } catch (excv$0) {
      var e$1 = undefined;var e$0 = undefined;var t0$12 = undefined;t0$12 = excv$0;if (getChecker(ErrorFactory(["kaiser"]))(t0$12)) {
        e$0 = t0$12;return deprox$0(value$4);
      } else {
        e$1 = excv$0;throw e$1;
      }
    }m$6 = null;$2: for (var _iterator = [ID$0, symbols$0.cache][Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
      m$6 = _step.value;
      var field$0 = undefined;field$0 = m$6;tuck$0(rval$0, field$0, send(value$4, field$0));
    }fork__minus__identify$0(rval$0);return rval$0;
  }
};Directory$0.prototype.clobber = function clobber(temp$6$0, new__minus__value$0) {
  var t0$13 = undefined;var $$3262$0 = undefined;var bridge$$3259$0 = undefined;var value$5 = undefined;var ph$4$0 = undefined;var __at___$10 = undefined;var self$9 = undefined;__at___$10 = this;self$9 = this;t0$13 = temp$6$0;value$5 = t0$13;ph$4$0 = t0$13;bridge$$3259$0 = ph$4$0;if (bridge$$3259$0 === null || bridge$$3259$0 === void 0) {
    return new__minus__value$0;
  } else {
    getProjector(identify$0)(value$5)[1];getProjector(identify$0)(new__minus__value$0)[1];if (send(value$5, ID$0) && send(value$5, ID$0) === send(new__minus__value$0, ID$0)) {
      return value$5;
    } else {
      return clobber$0(value$5, new__minus__value$0, __at___$10);
    }
  }
};Directory$0.prototype.replace = function replace() {
  var v$6 = undefined;var old__minus__value$0 = undefined;var new__minus__value$1 = undefined;var try__minus__clobber$0 = undefined;var t0$14 = undefined;var m$7$0 = undefined;var __at___$11 = undefined;var self$10 = undefined;__at___$11 = this;self$10 = this;m$7$0 = arguments;t0$14 = m$7$0.length;if (t0$14 >= 2 && t0$14 <= 3) {
    old__minus__value$0 = m$7$0[0];new__minus__value$1 = m$7$0[1];if (2 >= t0$14) {
      try__minus__clobber$0 = true;
    } else {
      try__minus__clobber$0 = m$7$0[2];
    }if (__at___$11.clobberPatch && try__minus__clobber$0) {
      return __at___$11.clobber(old__minus__value$0, __at___$11.getCanon(new__minus__value$1));
    } else {
      v$6 = __at___$11.acquire(new__minus__value$1);__at___$11.exit(old__minus__value$0);return v$6;
    }
  } else {
    return ___match_error(m$7$0, "{old-value, new-value, try-clobber = true}");
  }
};Directory$0.prototype.patch = function patch(p$0) {
  var m$8 = undefined;var acc$1 = undefined;var temp$7 = undefined;var __at___$12 = undefined;var self$11 = undefined;__at___$12 = this;self$11 = this;__at___$12.version = __at___$12.version + 1;acc$1 = [];temp$7 = null;m$8 = null;$3: for (var _iterator = p$0.list()[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
    m$8 = _step.value;
    var m$9 = undefined;var acc$2 = undefined;var temp$8 = undefined;var id$4 = undefined;var obj__minus__patch$0 = undefined;var t0$15 = undefined;var t1$4 = undefined;t0$15 = m$8;if (Array.isArray(t0$15) && (t1$4 = t0$15.length, t1$4 === 2)) {
      id$4 = t0$15[0];obj__minus__patch$0 = t0$15[1];acc$2 = [];temp$8 = null;m$9 = null;$4: for (var _iterator2 = __at___$12.getAll(id$4)[Symbol.iterator](), _step2; !(_step2 = _iterator2.next()).done;) {
        m$9 = _step2.value;
        var obj$0 = undefined;obj$0 = m$9;temp$8 = patch__minus__shallow$0(obj$0, p$0, __at___$12);acc$2.push(temp$8);
      }temp$7 = acc$2;acc$1.push(temp$7);
    } else {
      ___match_error(m$8);
    }
  }return acc$1;
};__amp____colon__(Directory$0, __amp____colon__(($targ$7 = "Directory", accum$0 = {}, accum$0["::name"] = $targ$7, accum$0), ($targ$8 = true, accum$1 = {}, accum$1["::egclass"] = $targ$8, accum$1)));patch__minus__shallow$0 = function patchShallow(temp$9$0, patch$0, dir$0) {
  var t0$16 = undefined;var t1$5 = undefined;var t0$17 = undefined;var m$11 = undefined;var acc$3 = undefined;var temp$10 = undefined;var splices$0 = undefined;var m$15 = undefined;var acc$6 = undefined;var temp$13 = undefined;var m$10$0 = undefined;var x$1 = undefined;var p$1 = undefined;var $targ$9 = undefined;var o$0 = undefined;var changes$0 = undefined;var value$6 = undefined;var h$0 = undefined;t0$16 = temp$9$0;value$6 = t0$16;t1$5 = getProjector(get__minus__handler$0)(t0$16);if (t1$5[0]) {
    h$0 = t1$5[1];
  } else {
    ___match_error(temp$9$0);
  }x$1 = kser$0.toObject(value$6, false);p$1 = patch$0.getFor(value$6);$targ$9 = x$1.data;t0$17 = getProjector(clone)($targ$9);if (t0$17[0]) {
    o$0 = t0$17[1];
  } else {
    ___match_error($targ$9, "clone! o");
  }changes$0 = false;m$10$0 = o$0;if (Array.isArray(m$10$0)) {
    splices$0 = p$1["@splice"];if (!splices$0) {
      return null;
    }changes$0 = true;acc$3 = [];temp$10 = null;m$11 = null;$5: for (var _iterator = enumerate(splices$0).reverse()[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
      var _iterator2, _step2;

      var _iterator3, _step3;

      (function () {
        m$11 = _step.value;
        var m$12 = undefined;var acc$4 = undefined;var temp$11 = undefined;var m$13 = undefined;var acc$5 = undefined;var temp$12 = undefined;var m$14 = undefined;var previous$0 = undefined;var acq$0 = undefined;var n$0 = undefined;var repl$0 = undefined;var t0$19 = undefined;var t1$7 = undefined;var i$0 = undefined;var ph$5$0 = undefined;var t0$18 = undefined;var t1$6 = undefined;t0$18 = m$11;if (Array.isArray(t0$18) && (t1$6 = t0$18.length, t1$6 === 2)) {
          i$0 = t0$18[0];ph$5$0 = t0$18[1];t0$19 = ph$5$0;if (Array.isArray(t0$19) && (t1$7 = t0$19.length, t1$7 === 2)) {
            n$0 = t0$19[0];repl$0 = t0$19[1];previous$0 = o$0.splice(i$0, n$0);acc$4 = [];temp$11 = null;m$12 = null;$7: for (_iterator2 = zip(repl$0.slice(0, previous$0.length), previous$0)[Symbol.iterator](); !(_step2 = _iterator2.next()).done;) {
              m$12 = _step2.value;
              var new__minus__value$2 = undefined;var old__minus__value$1 = undefined;var t0$20 = undefined;var t1$8 = undefined;t0$20 = m$12;if (Array.isArray(t0$20) && (t1$8 = t0$20.length, t1$8 === 2)) {
                new__minus__value$2 = t0$20[0];old__minus__value$1 = t0$20[1];temp$11 = dir$0.replace(old__minus__value$1, new__minus__value$2);acc$4.push(temp$11);
              } else {
                ___match_error(m$12);
              }
            }acq$0 = acc$4;acq$0 = acq$0.concat((acc$5 = [], temp$12 = null, m$13 = null, (function () {
              $8: for (var _iterator3 = repl$0.slice(previous$0.length)[Symbol.iterator](), _step3; !(_step3 = _iterator3.next()).done;) {
                m$13 = _step3.value;
                var new__minus__value$3 = undefined;new__minus__value$3 = m$13;temp$12 = dir$0.acquire(new__minus__value$3);acc$5.push(temp$12);
              }
            })(), acc$5));m$14 = null;$6: for (_iterator3 = previous$0.slice(repl$0.length)[Symbol.iterator](); !(_step3 = _iterator3.next()).done;) {
              m$14 = _step3.value;
              var oldv$0 = undefined;oldv$0 = m$14;dir$0.exit(oldv$0);
            }temp$10 = send(send(o$0, "splice", true), [i$0, 0].concat(acq$0));
          } else {
            temp$10 = undefined;
          }acc$3.push(temp$10);
        } else {
          ___match_error(m$11);
        }
      })();
    }acc$3;
  } else {
    if (getChecker(Object)(m$10$0)) {
      acc$6 = [];temp$13 = null;m$15 = null;$9: for (var _iterator4 = items(p$1)[Symbol.iterator](), _step4; !(_step4 = _iterator4.next()).done;) {
        m$15 = _step4.value;
        var $targ$10 = undefined;var new__minus__value$4 = undefined;var $$3618$0 = undefined;var $$3619$0 = undefined;var $$3620$0 = undefined;var t0$22 = undefined;var t1$10 = undefined;var k$3 = undefined;var instruction$0 = undefined;var ph$6$0 = undefined;var t0$21 = undefined;var t1$9 = undefined;var t2$0 = undefined;t0$21 = m$15;if (Array.isArray(t0$21) && (t1$9 = t0$21.length, t1$9 === 2)) {
          k$3 = t0$21[0];t2$0 = t0$21[1];instruction$0 = t2$0;ph$6$0 = t2$0;changes$0 = true;t0$22 = ph$6$0;if (($$3619$0 = Array.isArray(t0$22)) && (t1$10 = t0$22.length, t1$10 === 1 && t0$22[0] === "delete")) {
            dir$0.exit(send(o$0, k$3));delete o$0[k$3];
          } else {
            if ($$3619$0 && (t1$10 === 2 && t0$22[0] === "update")) {
              new__minus__value$4 = t0$22[1];if (Object.hasOwnProperty(o$0, k$3)) {
                $targ$10 = dir$0.replace(send(o$0, k$3), new__minus__value$4);
              } else {
                $targ$10 = dir$0.enter(new__minus__value$4);
              }o$0[k$3] = $targ$10;temp$13 = void 0;
            } else {
              throw ErrorFactory(["quasar", "patch"]).create("Unknown patch instruction: " + instruction$0);
            }
          }acc$6.push(temp$13);
        } else {
          ___match_error(m$15);
        }
      }acc$6;
    } else {
      ___match_error(m$10$0, "Object? ");
    }
  }if (changes$0) {
    return h$0.fill(value$6, o$0);
  }
};$targ$11 = Directory$0;exports.Directory = $targ$11;void 0;
//# sourceMappingURL=directory.js.map

