
require:
   .util ->
      symbols

provide:
   intersect, iterate-intersect, relevant-changes


intersect{tracks, patch, dir} =
   iterate-intersect{tracks, patch, dir} each x ->
      return true
   false

gen iterate-intersect{tracks, patch, dir} =
   patch.list{} each {id, writes} ->
      obj = dir.get{id}
      reads = tracks.get{id}
      if reads:
         yield all relevant-changes{obj, reads, writes}

relevant-changes{value, reads, writes} =
   reads[symbols.relevant-changes]{writes}
